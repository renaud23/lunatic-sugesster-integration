{"version":3,"sources":["lunatic-user/cog/store.js","lunatic-user/cog/fetch.js","lunatic-user/cog/option-renderer.js","lunatic-user/cog/index.js","lunatic-user/naf-rev2/store.js","lunatic-user/naf-rev2/fetch.js","lunatic-user/naf-rev2/option-renderer.js","lunatic-user/naf-rev2/index.js","lunatic-user/get-store-info.js","lunatic-user/progress.js","lunatic-user/loader.js","lunatic-user/load-stores.js","lunatic/create-ochestrateur.js","lunatic-user/application.js","index.js"],"names":["store","name","fields","rules","queryParser","type","version","display","a","path","fetch","response","json","cog","map","commune","i","com","id","fetchCOG","OptionCogRenderer","DEFAULT","optionRenderer","option","selected","libelle","className","classnames","labelRenderer","undefined","language","min","params","pattern","naf","Object","values","rubrique","code","fetchNaf","OptionNafRenderer","niveau","title","STORES","nafRev2","getStoreInfo","Progress","value","Box","position","CircularProgress","variant","color","top","left","bottom","right","alignItems","justifyContent","Typography","component","Math","round","ENV_PATH","process","postLoad","Loader","start","db","idbVersion","post","useState","progress","setProgress","entities","setEntities","log","message","console","percent","useEffect","e","load","storeIndex","createAppendTask","abort","clearData","go","style","OpenAndLoad","useStoreIndex","LoadStores","jsonLunatic","suggesters","disabled","setDisabled","stores","setStores","setStart","Array","isArray","str","reduce","storeInfo","warn","postProcess","useMemo","done","sn","state","s","content","Fab","aria-label","onClick","Unmocked","SuggesterWithLabel","labelId","label","storeName","labelledBy","create","ochestrateur","components","index","componentType","max","createOchestrateur","Application","setComponents","ReactDOM","render","StrictMode","mandatory","document","getElementById"],"mappings":"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","file":"static/js/main.d47b946e.chunk.js","sourcesContent":["export const store = {\n  name: \"cog\",\n  fields: [\n    { name: \"libelle\", rules: \"soft\" },\n    { name: \"nccenr\", rules: \"soft\" },\n    { name: \"com\", rules: \"soft\" },\n  ],\n  queryParser: { type: \"soft\" },\n  version: \"1\",\n  display: \"libelle\",\n};\n\nexport default store;\n","async function fetchCOG(path = \"\") {\n  const response = await fetch(`${path}/communes-2019.json`);\n  const cog = await response.json();\n  return cog.map(function (commune, i) {\n    const { com } = commune;\n    return { ...commune, id: `${com}-${i}` };\n  });\n}\n\nexport default fetchCOG;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./theme.scss\";\n\nfunction OptionCogRenderer({ option, selected }) {\n  const { libelle, com } = option;\n  return (\n    <div className={classnames(\"cog-option\", { selected })}>\n      <span className=\"code\">{com}</span>\n      <span className=\"libelle\">{libelle}</span>\n    </div>\n  );\n}\n\nexport default OptionCogRenderer;\n","import { default as store } from \"./store\";\nimport { default as fetch } from \"./fetch\";\nimport { default as OptionRenderer } from \"./option-renderer\";\n\nconst DEFAULT = {\n  store,\n  optionRenderer: OptionRenderer,\n  labelRenderer: undefined,\n  fetch,\n};\nexport { store, fetch, OptionRenderer };\nexport default DEFAULT;\n","export const store = {\n  name: \"naf-rev2\",\n  fields: [\n    { name: \"libelle\", rules: [/[\\w]+/], language: \"French\", min: 3 },\n    { name: \"code\" },\n  ],\n  queryParser: {\n    type: \"tokenized\",\n    params: { language: \"French\", pattern: /[\\w.]+/ },\n  },\n  version: \"1\",\n  display: \"libelle\",\n};\n\nexport default store;\n","async function fetchNaf(path = \"\") {\n  const response = await fetch(`${path}/naf-rev2.json`);\n  const naf = await response.json();\n  return Object.values(naf).map(function (rubrique) {\n    const { code } = rubrique;\n    return { ...rubrique, id: code };\n  });\n}\n\nexport default fetchNaf;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./theme.scss\";\n\nfunction OptionNafRenderer({ option, selected }) {\n  const { libelle, code, niveau } = option;\n  return (\n    <div className={classnames(\"naf-option\", { selected })}>\n      <span className={classnames(\"code\", niveau)} title={`${niveau} ${code}`}>\n        {code}\n      </span>\n      <span className=\"libelle\">{libelle}</span>\n    </div>\n  );\n}\n\nexport default OptionNafRenderer;\n","import { default as store } from \"./store\";\nimport { default as fetch } from \"./fetch\";\nimport { default as OptionRenderer } from \"./option-renderer\";\n\nconst DEFAULT = {\n  store,\n  optionRenderer: OptionRenderer,\n  labelRenderer: undefined,\n  fetch,\n};\nexport { store, fetch, OptionRenderer };\nexport default DEFAULT;\n","/**\n * les composants de rendu des options et du label ne peuvent pas être véhiculés par le json lunatic.\n * On doit donc proposer des élèments supplémentaire spécifique pour chaque suggester. Autant déporter toutes ces infos endehors du json.\n * On peut\n *  - intégrer ces éléments à Lunatic (pas top car spécifique Insee)\n *  - laisser les clients lunatic integrer directement ces élèments en documentant en et fournissant des snipettes.\n * Perso je pense qu'il vaudrais mieux laisser le soin à chaque intégrateur de proposer ses propres implèmentations.\n *\n */\nimport cog from \"./cog\";\nimport nafRev2 from \"./naf-rev2\";\n\nconst STORES = {\n  [cog.store.name]: cog,\n  [nafRev2.store.name]: nafRev2,\n};\n\nfunction getStoreInfo(name) {\n  if (name in STORES) {\n    return STORES[name];\n  }\n  return undefined;\n}\n\nexport default getStoreInfo;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Progress({ display, value = 0 }) {\n\tif (display) {\n\t\treturn (\n\t\t\t<Box position=\"relative\" display=\"inline-flex\">\n\t\t\t\t<CircularProgress\n\t\t\t\t\tvariant=\"determinate\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t/>\n\t\t\t\t<Box\n\t\t\t\t\ttop={0}\n\t\t\t\t\tleft={0}\n\t\t\t\t\tbottom={0}\n\t\t\t\t\tright={0}\n\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t>{`${Math.round(value)}%`}</Typography>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n\treturn null;\n}\n\nexport default Progress;\n","import React, { useEffect, useState } from \"react\";\nimport { storeIndex } from \"lunatic-suggester\";\nimport Progress from \"./progress\";\n\nconst ENV_PATH = process.env.REACT_APP_BASE_PATH;\n\nfunction postLoad() {}\n\nfunction Loader({\n  start,\n  db,\n  store,\n  idbVersion = \"1\",\n  fetch,\n  post = postLoad,\n}) {\n  const [progress, setProgress] = useState(0);\n  const [entities, setEntities] = useState(undefined);\n  const { name, fields } = store;\n\n  useEffect(\n    function () {\n      async function load() {\n        if (typeof fetch === \"function\" && start) {\n          const e = await fetch(ENV_PATH);\n          setEntities(e);\n        }\n      }\n      load();\n    },\n    [fetch, start]\n  );\n\n  function log({ message }) {\n    console.log(message);\n    const { type, percent } = message;\n    if (type === \"bulk-insert/complete\") {\n      setProgress(percent);\n    }\n  }\n\n  useEffect(\n    function () {\n      const [start, abort] = storeIndex.createAppendTask(\n        name,\n        idbVersion,\n        fields,\n        log\n      );\n\n      async function go() {\n        try {\n          if (entities && db) {\n            storeIndex.clearData(db);\n            await start(entities);\n            post(name);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      go();\n\n      return function () {\n        abort();\n      };\n    },\n    [name, fields, db, entities, idbVersion, post]\n  );\n\n  return (\n    <span style={{ position: \"relative\" }}>\n      <span style={{ position: \"absolute\", top: 0 }}>{name}</span>\n      <Progress value={progress} display={true} />\n    </span>\n  );\n}\n\nexport default Loader;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport getStoreInfo from \"./get-store-info\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Loop from \"@material-ui/icons/Loop\";\nimport { storeIndex } from \"lunatic-suggester\";\nimport Loader from \"./loader\";\n\nfunction isEnded(map) {\n  return Object.values(map).reduce(function (state, s) {\n    return state && s;\n  }, true);\n}\n\nfunction OpenAndLoad({ store, fetch, start, idbVersion, post }) {\n  const db = storeIndex.useStoreIndex(store, idbVersion);\n  if (db) {\n    return (\n      <Loader start={start} db={db} store={store} fetch={fetch} post={post} />\n    );\n  }\n  return \"waiting...\";\n}\n\nfunction LoadStores({ jsonLunatic = {} }) {\n  const { suggesters } = jsonLunatic;\n  const [disabled, setDisabled] = useState(true);\n  const [stores, setStores] = useState(undefined);\n  const [start, setStart] = useState(false);\n\n  useEffect(\n    function () {\n      if (Array.isArray(suggesters)) {\n        const str = suggesters.reduce(function (a, name) {\n          const storeInfo = getStoreInfo(name);\n          if (storeInfo) {\n            return { ...a, [name]: storeInfo };\n          }\n          console.warn(`Unmanaged suggester ${name}`);\n          return a;\n        }, {});\n        setStores(str);\n        setDisabled(false);\n      }\n    },\n    [suggesters]\n  );\n\n  const postProcess = useMemo(\n    function () {\n      if (Array.isArray(suggesters)) {\n        const done = suggesters.reduce(\n          (a, name) => ({ ...a, [name]: false }),\n          {}\n        );\n        return function (sn) {\n          done[sn] = true;\n          if (isEnded(done)) {\n            setDisabled(false);\n            setStart(false);\n          }\n        };\n      }\n\n      return () => null;\n    },\n    [suggesters]\n  );\n\n  if (Array.isArray(suggesters)) {\n    if (stores) {\n      const content = suggesters.reduce(function (a, name) {\n        if (stores[name]) {\n          const { store, fetch } = stores[name];\n\n          return [\n            ...a,\n            <OpenAndLoad\n              key={name}\n              store={store}\n              fetch={fetch}\n              start={start}\n              idbVersion=\"1\"\n              post={postProcess}\n            />,\n          ];\n        }\n        return a;\n      }, []);\n\n      return (\n        <>\n          <Fab\n            disabled={disabled}\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => {\n              setStart(true);\n              setDisabled(true);\n            }}\n          >\n            <Loop />\n          </Fab>\n          {content}\n        </>\n      );\n    }\n    return <div>Not ready yet!</div>;\n  }\n  return <div>Rien à charger !</div>;\n}\n\nexport default LoadStores;\n","import { LunaticIDBSuggester } from \"lunatic-suggester\";\n\nfunction Unmocked() {\n  return <div>Composant Lunatic.</div>;\n}\n\nfunction SuggesterWithLabel({ labelId, label, storeInfo, className }) {\n  const { optionRenderer, labelRenderer, store } = storeInfo;\n  const { name } = store;\n  return (\n    <>\n      <div id={labelId}>{label}</div>\n      <LunaticIDBSuggester\n        storeName={name}\n        optionRenderer={optionRenderer}\n        labelRenderer={labelRenderer}\n        labelledBy={labelId}\n        className={className}\n      />\n    </>\n  );\n}\n\n/**\n * getStoreInfo : une fonction, fourni par l'intégrateur lunatique. Elle permet à l'ochestrateur d'indiquer au suggester\n * les quelques éléments nécessaires à son instanciation et spécifique à l'application.\n * @param {*} getStoreInfo\n * @returns\n */\nfunction create(getStoreInfo) {\n  return function (json) {\n    const { components } = json;\n    if (components) {\n      return components.reduce(function (a, component, index) {\n        const { componentType } = component;\n        if (componentType === \"IdbSuggester\") {\n          const { storeName, label, className, max } = component;\n          const storeInfo = getStoreInfo(storeName);\n          const labelId = `lunatic-label-${storeName}`;\n          return [\n            ...a,\n            <SuggesterWithLabel\n              key={`orchestrateur-IdbSuggester-${storeName}`}\n              storeInfo={storeInfo}\n              label={label}\n              labelId={labelId}\n              className={className}\n              max={max}\n            />,\n          ];\n        }\n        return [...a, <Unmocked key={index} />];\n      }, []);\n    }\n    return [];\n  };\n}\n\nexport default create;\n","import React, { useState, useEffect } from \"react\";\nimport LoadStore from \"./load-stores\";\nimport getStoreInfo from \"./get-store-info\";\nimport { createOchestrateur } from \"../lunatic\";\n\nconst ochestrateur = createOchestrateur(getStoreInfo);\n\nfunction Application({ jsonLunatic }) {\n  const [components, setComponents] = useState(undefined);\n\n  useEffect(\n    function () {\n      if (jsonLunatic) {\n        setComponents(ochestrateur(jsonLunatic));\n      }\n    },\n    [jsonLunatic]\n  );\n\n  return (\n    <div className=\"application-cliente-de-lunatic\">\n      <h1>Simulation intégration Lunatic</h1>\n      <h2>Fonctionnalité de chargement du store</h2>\n      <LoadStore jsonLunatic={jsonLunatic} />\n      <h2>Formulaire lunatic</h2>\n      {components}\n    </div>\n  );\n}\n\nexport default Application;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Application } from \"./lunatic-user\";\nimport \"./custom-themes.scss\";\n\nconst JSON_LUNATIC = {\n  suggesters: [\"cog\", \"naf-rev2\"],\n  components: [\n    {\n      id: \"j4nw5cqz\",\n      componentType: \"IdbSuggester\",\n      mandatory: false,\n      label: \"Suggester COG\",\n      response: {\n        name: \"STATE\",\n      },\n      storeName: \"cog\",\n      className: \" custom-theme\",\n      max: 10,\n    },\n    {\n      id: \"ffnw9cqz\",\n      componentType: \"IdbSuggester\",\n      mandatory: false,\n      label: \"Suggester NAF-REV2\",\n      response: {\n        name: \"STATE\",\n      },\n      storeName: \"naf-rev2\",\n      className: \" custom-theme\",\n      max: 8,\n    },\n  ],\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application jsonLunatic={JSON_LUNATIC} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}